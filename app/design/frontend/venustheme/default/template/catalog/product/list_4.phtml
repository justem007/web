<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2014 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
/* @var $this Mage_Catalog_Block_Product_List */
$common_template = $default_path = "item.phtml";
$current_catalog_product_path = Mage::getSingleton('core/design_package')->getBaseDir(array('_area' => 'frontend', '_type'=>'template'));
$current_catalog_product_path .= "/common/list/";

$common_item_layout = false;

$base_catalog_product_path = Mage::getBaseDir('design')."/base/default/template/common/list/";

if(file_exists($current_catalog_product_path.$common_template)) { //Load in default template
    $common_item_layout = $current_catalog_product_path.$common_template;
} elseif(file_exists($current_catalog_product_path.$default_path)) {
    $common_item_layout = $current_catalog_product_path.$default_path;
} elseif(file_exists($base_catalog_product_path.$common_template)) { //Load in base template
    $common_item_layout = $base_catalog_product_path.$common_template;
} elseif(file_exists($base_catalog_product_path.$default_path)) {
    $common_item_layout = $base_catalog_product_path.$default_path;
}
?>
<?php if(!$count): ?>
    <p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
    <div class="category-products">
        <?php if ($show_toptoolbar):  //Enable/Disable Top Toolbar ?>
            <?php echo $this->getToolbarHtml() ?>
        <?php endif; ?>
        <?php // List mode ?>
        <?php if($this->getMode()!='grid'):  ?>
            <?php $_iterator = 0; ?>
            <div class="products-list <?php echo $class; ?>" id="products-list">
                <?php foreach ($_productCollection as $_product):?>
                    <?php $mId = rand().time(); ?>
                    <div class="item<?php if( ++$_iterator == sizeof($_productCollection) ): ?> last<?php endif; ?> col ">
                        <?php
                        if($common_item_layout) {
                            require ($common_item_layout);
                        }
                        ?>
                    </div>
                <?php endforeach; ?>
            </div>
            <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>

        <?php else: ?>
            <?php // Grid Mode ?>
            <?php $_columnCount = $this->getColumnCount(); ?>
            <ul class="products-grid category-products-grid products-grid--max-<?php echo $columns; ?>-col <?php echo $class; ?>">
                <?php $x=0; ?>
                <?php foreach ($_productCollection as $_product): ?>
                    <?php $mId = rand().time(); ?>
                    <li class="item<?php if($x==0): ?> first<?php elseif($x==($columns-1)): ?> last<?php endif; ?> ">
                        <?php if($common_item_layout) {
                            require ($common_item_layout);
                        } ?>
                    </li>
                    <?php $x++; ?>
                <?php endforeach ?>
            </ul>
            <script type="text/javascript">decorateGeneric($$('ul.products-grid'), ['odd','even','first','last'])</script>
        <?php endif; ?>
        <?php if ($show_bottomtoolbar): //Enable/Disable Footer Toolbar ?>
            <div class="toolbar-bottom">
                <?php echo $this->getToolbarHtml() ?>
            </div>
        <?php endif; ?>
    </div>
<?php endif; ?>
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}