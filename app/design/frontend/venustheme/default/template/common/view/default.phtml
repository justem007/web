<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2014 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php
$controller = Mage::app()->getRequest()->getControllerName();
?>
<?php
$_helper = $this->helper('catalog/output');
$_product = $this->getProduct();

$ves = $this->helper('themesettings');
$tabs_mode = $ves->getConfig('product_page/tabs_mode');

$enable_description = $ves->getConfig('product_page/enable_description');
$enable_addtioninfo = $ves->getConfig('product_page/enable_addtioninfo');
$enable_reviews = $ves->getConfig('product_page/enable_reviews');
$enable_tags = $ves->getConfig('product_page/enable_tags');
$enable_related = $ves->getConfig('product_page/enable_related');
$enable_upsell = $ves->getConfig('product_page/enable_upsell');
$enable_customtab = $ves->getConfig('product_page/enable_customtab');
$customtab_name = $ves->getConfig('product_page/customtab_name');
$staticBlockId = $ves->getConfig('product_page/customtab_staticblock');
$customtab_title = $ves->getConfig('product_page/customtab_title');
$customtab_content = $ves->getConfig('product_page/customtab_content');
$customtab_attribute = $ves->getConfig('product_page/customtab_attribute');
$show_countdowntimer = $ves->getConfig('product_page/show_countdowntimer');
$processor = Mage::helper('cms')->getPageTemplateProcessor();

if(!$enable_description){
    $this->unsetChild('description');
}

if(!$enable_addtioninfo){
    $this->unsetChild('additional');
}

if($enable_reviews){
    //$this->unsetChild('reviews');
    $reviews_count = Mage::getModel('review/review_summary')
    ->setStoreId(Mage::app()->getStore()->getId())
    ->load($_product->getId())->getData('reviews_count');
    $review_title = $reviews_count?'<span class="badge">'.$reviews_count.'</span> '.$this->__('Reviews'):$this->__('Reviews');
    if($this->getChild('reviews')){
        $reviews = $this->getChild('reviews')->setData('title', $review_title);
    }
}


if(!$enable_tags){
    $this->unsetChild('product_additional_data');
}

if($enable_tags){
    $product_tags = Mage::app()->getLayout()->createBlock('tag/product_list')->setTitle('Product Tags')->setBlockAlias('relatedproducts_tab')->setTemplate('tag/list.phtml');
    $this->append($product_tags,'product_tags');
    $this->addToChildGroup('detailed_info',$product_tags);
}

if($enable_related){
    $related_products = Mage::app()->getLayout()->createBlock('catalog/product_list_related')->setTitle('Related Products')->setBlockAlias('relatedproducts_tab')->setTemplate('catalog/product/list/related_carousel.phtml');
    $this->append($related_products,'relatedproducts_tab');
    $this->addToChildGroup('detailed_info',$related_products);
}

if($enable_upsell){
    $upsell_products = Mage::app()->getLayout()->createBlock('catalog/product_list_upsell')->setTitle('Upsell Products')->setBlockAlias('upsellproducts_tab')->setTemplate('catalog/product/list/upsell_carousel.phtml');
    $this->append($upsell_products,'upsells_tab');
    $this->addToChildGroup('detailed_info',$upsell_products);
}

$route = Mage::app()->getRequest()->getRouteName();

// CustomTab Attributes
if($customtab_attribute!=''){

    $customAttribute = unserialize($customtab_attribute);
    if(is_array($customAttribute) && count($customAttribute)>0){
        foreach ($customAttribute as $k => $v) {
            $html = $customAttr = '';
            if($v['code'] && $v['code']!=''){
                $tabAlias = 'customAtt'.$v['code'];
                $code = 'get'.ucfirst($v['code']);

                $code = str_replace(["-","_"], "", $code);
                $html = '';

                // Check is attribute
                if($_product->getData($v['code'])){
                    $html = $_product->getAttributeText($v['code']);
                }
                // Attribute Text
                if($html==''){
                    $html = $_product->$code();
                }

                if(is_array($html)){
                    $html = implode(', ', $html);
                }

                $html = $processor->filter($html);

                $customAttr = Mage::app()->getLayout()->createBlock('core/template')->setTitle($v['name'])->setBlockAlias($tabAlias)->setData('html',$html)->setTemplate('ves/themesettings/product/attribute.phtml');
                $this->append($customAttr,$tabAlias);
                $this->addToChildGroup('detailed_info',$customAttr);
            }
        }
    }
}

// Custom Tab
if($customtab_title != ''){
    $html = '';
    if($staticBlockId != ''){
        $html = Mage::getSingleton('core/layout')->createBlock('cms/block')->setBlockId($staticBlockId)->toHtml();
    }
    if($staticBlockId == '' && $customtab_content != ''){
        $html = $customtab_content;
    }
    $html = $processor->filter($html);
    $customTab = Mage::app()->getLayout()->createBlock('core/template')->setTitle($customtab_title)->setBlockAlias('customtab')->setData('html',$html)->setTemplate('ves/themesettings/product/attribute.phtml');
    $this->append($customTab,'customtab');
    $this->addToChildGroup('detailed_info',$customTab);
}
//Rich snippets
$helperSnippets = $this->helper('themesettings/rsnippets');

//CSS classes based on product type
$productTypeId = $_product->getTypeId();
$productTypeClasses = '';
if ($productTypeId === 'grouped') {
    $productTypeClasses .= ' is-type-grouped';
}
$useRichSnippets = ($productTypeId !== 'grouped')?true:false;
$priceProperties = '';
if ($useRichSnippets){
        $priceProperties = $helperSnippets->getPriceProperties($_product); //Has to be called before getOfferItemscope
    }

    $ajax = $this->helper('ajax');
    $ajaxcart = $ajax->getConfig('general_setting/enable_ajaxcart');

    if($route == 'ajax'){
        $classes .= ' product-popup';
    }
    ?>
    <script type="text/javascript">
        var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
    </script>
    <div id="messages_product_view"><?php echo $this->getMessagesBlock()->toHtml() ?></div>
    <div class="product-view nested-container <?php echo $classes ?>" itemscope itemtype = "http://schema.org/Product" <?php if ($useRichSnippets) echo $helperSnippets->getProductItemscope(); ?>>
        <?php if($useRichSnippets){ ?>
        <meta itemprop="url" content="<?php echo $_product->getProductUrl() ?>"/>
        <?php } ?>
        <div class="product-essential">
            <form action="<?php echo $this->getSubmitUrl($_product, array('_secure' => $this->_isSecure())) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
                <?php echo $this->getBlockHtml('formkey') ?>
                <div class="no-display">
                    <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                    <input type="hidden" name="related_product" id="related-products-field" value="" />
                </div>

                <div class="product-img-box ">
                    <div class="product-name">
                        <h1 itemprop = "name"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                    </div>
                    <?php echo $this->getChildHtml('media') ?>
                </div>
                <div class="product-shop">
                    <div class="product-name">
                        <h1 itemprop="name"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>

                        <?php if($_product->isAvailable()): ?>
                            <div class="no-display" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                                <span itemprop = "price"><?php echo Mage::helper('core')->currency($_product->getFinalPrice());?></span>
                            </div>
                        <?php endif; ?>
                    </div>

                    <meta itemprop= "url" content= "<?php echo $_product->getUrlModel()->getUrl($_product, array('_ignore_categoryâ€™=>true'));?>)" />
                    <meta itemprop= "sku" content= "<?php echo $_product->getSku() ?>" />

                    <?php // SKU Block ?>
                    <?php if($sku = $_product->getSku()){ ?>
                    <?php  if($ves->getConfig("product_page/show_sku")){  ?>
                    <div class="sku">
                        <span class="label"><?php echo $this->__('SKU'); ?>: </span>
                        <span class="value"><?php echo $sku; ?></span>
                    </div>
                    <?php } ?>
                    <?php if ($useRichSnippets): ?>
                        <meta itemprop="productID" content="sku:<?php echo $sku; ?>" />
                    <?php endif; ?>
                    <?php } ?>

                    <div class="price-info">
                        <?php echo $this->getPriceHtml($_product); ?>
                        <?php echo $this->getChildHtml('bundle_prices') ?>
                        <?php echo $this->getTierPriceHtml() ?>
                    </div>

                    <div class="extra-info">
                        <?php echo $this->getReviewsSummaryHtml($_product, 'aggregate', false)?>
                        <?php echo $this->getChildHtml('product_type_availability'); ?>
                    </div>

                    <?php echo $this->getChildHtml('alert_urls') ?>

                    <?php if ($_product->getShortDescription()):?>
                        <div class="short-description">
                            <div class="std" itemprop="description"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                        </div>
                    <?php endif;?>

                    <?php echo $this->getChildHtml('other');?>

                    <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                        <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                    <?php endif;?>

                    <?php // Countdown Timer Block ?>
                    <?php if( isset($_product) && $_product->getFinalPrice() < $_product->getPrice() && $show_countdowntimer && $_product->getSpecialToDate()!=''){
                        $date1 = date('G:i:s', strtotime($_product->getSpecialToDate()));
                        if ($date1 == "0:00:00") {
                            $targetDate = date('m/d/Y \2\3\:\5\9\:\0\0', strtotime($_product->getSpecialToDate()));
                        }else{
                            $targetDate = date('m/d/Y G:i:s', strtotime($_product->getSpecialToDate()));
                        }
                        ?>
                        <div class="countdown-timmer">
                            <?php $mId = rand().time(); ?>
                            <div class="item-detail">
                                <div class="timer-explain">(<?php echo date('m/d/Y', strtotime($_product->getSpecialToDate())); ?>)</div>
                            </div>
                            <div id="item<?php echo $mId; ?>countdown_<?php echo $_product->getId(); ?>" class="item-countdown"></div>
                            <script type="text/javascript">
                                jQuery(document).ready(function($){
                                    $("#item<?php echo $mId; ?>countdown_<?php echo $_product->getId(); ?>").lofCountDown({
                                        formatStyle:2,
                                        TargetDate:"<?php echo $targetDate; ?>",
                                        DisplayFormat:"<ul><li>%%D%% <div><?php echo $this->__('Day');?></div></li><li> %%H%% <div><?php echo $this->__('Hours');?></div></li><li> %%M%% <div><?php echo $this->__('Mins');?></div></li><li> %%S%% <div><?php echo $this->__('Secs');?></div></li></ul>",
                                        FinishMessage:"<?php echo $this->__('Expired');?>",
                                    });
                                });
                            </script>
                        </div>
                        <?php } ?>

                    </div>

                    <div class="add-to-cart-wrapper">
                        <div <?php if ($useRichSnippets) echo $helperSnippets->getOfferItemscope(); ?>>
                            <div class="product-type-data<?php echo $productTypeClasses; ?>">
                                <?php echo $this->getChildHtml('product_type_data'); ?></div>
                                <?php echo $this->getTierPriceHtml(); ?>
                                <?php echo $priceProperties; ?>
                            </div> <?php //end: offers ?>


                            <?php if ($extrahint_html = $this->getChildHtml('extrahint')): //qty increments ?>
                                <div class="extrahint-wrapper"><?php echo $extrahint_html; ?></div>
                            <?php endif; ?>


                            <?php if (!$this->hasOptions()):?>
                                <div class="add-to-box">
                                    <?php if($_product->isSaleable()): ?>
                                        <?php echo $this->getChildHtml('addtocart') ?>
                                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                                            <span class="or"><?php echo $this->__('OR') ?></span>
                                        <?php endif; ?>
                                    <?php endif; ?>
                                    <?php echo $this->getChildHtml('addto') ?>
                                    <?php echo $this->getChildHtml('sharing') ?>
                                </div>
                                <?php echo $this->getChildHtml('extra_buttons') ?>
                            <?php elseif (!$_product->isSaleable()): ?>
                                <div class="add-to-box">
                                    <?php echo $this->getChildHtml('addto') ?>
                                    <?php echo $this->getChildHtml('sharing') ?>
                                </div>
                            <?php endif; ?>
                        </div>

                        <?php echo $this->getChildHtml('related_products') ?>

                        <div class="clearer"></div>
                        <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
                        <?php endif;?>
                    </form>
                    <script type="text/javascript">
        //<![CDATA[
        <?php if($ajaxcart) { ?>
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function(button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;
                    if (url) {
                        form.action = url;
                    }
                    var e = null;
                    <?php if($controller=='cart'){ ?>
                        this.form.submit();   
                        <?php } ?>
            // Start of our new ajax code
            if (!url) {
                url = jQuery('#product_addtocart_form').attr('action');
            }
            url = url.replace("checkout/cart","ajax/cart"); // New Code
            var data = jQuery('#product_addtocart_form').serialize();
            data += '&isAjax=1';
            jQuery('body').addClass('overlay');
            jQuery('#ajax_loader').show();
            try {
                jQuery.ajax( {
                    url : url,
                    dataType : 'json',
                    type : 'post',
                    data : data,
                    success : function(data) {
                        jQuery('#ajax_loader').hide();
                        if(data.status == 'ERROR'){
                            alert(data.message);
                        }else{
                            if(jQuery('#header-cart')){
                                jQuery('#header-cart').html(data.minicartContent);
                            }
                            if(jQuery('.top-minicart .count')){
                                jQuery('.top-minicart .count').show();
                                jQuery('.top-minicart .count').html(data.cart['items_qty']);
                            }
                            jQuery.fancybox({ content: data.message });
                            jQuery('#ajax_loader').hide();
                            parent.setAjaxData(data,true);
                        }
                    }
                });
} catch (e) {}
            // End of our new ajax code
            this.form.action = oldUrl;
            if (e) {
                throw e;
            }
        }
    }.bind(productAddToCartForm);
    productAddToCartForm.submitLight = function(button, url){
        if(this.validator) {
            var nv = Validation.methods;
            delete Validation.methods['required-entry'];
            delete Validation.methods['validate-one-required'];
            delete Validation.methods['validate-one-required-by-name'];
            if (this.validator.validate()) {
                if (url) {
                    this.form.action = url;
                }
                this.form.submit();
            }
            Object.extend(Validation.methods, nv);
        }
    }.bind(productAddToCartForm);

    <?php } else { ?>

        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
               }
               var e = null;
               try {
                this.form.submit();
            } catch (e) {
            }
            this.form.action = oldUrl;
            if (e) {
                throw e;
            }

            if (button && button != 'undefined') {
                button.disabled = true;
            }
        }
    }.bind(productAddToCartForm);

    productAddToCartForm.submitLight = function(button, url){
        if(this.validator) {
            var nv = Validation.methods;
            delete Validation.methods['required-entry'];
            delete Validation.methods['validate-one-required'];
            delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
        <?php } ?>
    //]]>
</script>
</div>

<?php if($route != 'ajax'){ ?>
<?php if(isset($tabs_mode)){ ?>
<div class="product-collateral toggle-content tabs <?php if($tabs_mode == 'accordion'){ ?>tabs-accodion<?php } ?>">
    <?php
    $detailedInfoGroup = $this->getChildGroup('detailed_info', 'getChildHtml');
    ?>
    <?php if ($detailedInfoGroup):?>
        <dl id="collateral-tabs" class="collateral-tabs">
            <?php foreach ($detailedInfoGroup as $alias => $html): Mage::log($alias); ?>
                <dt class="tab"><span><?php echo $this->getChildData($alias, 'title'); ?></span></dt>
                <dd class="tab-container">
                    <div class="tab-content"><?php echo $html ?></div>
                </dd>
            <?php endforeach;?>

        </dl>
    <?php endif; ?>
</div>
<?php } ?>

<?php echo $this->getChildHtml('upsell_products') ?>
<?php echo $this->getChildHtml('related_products_carousel') ?>
<?php echo $this->getChildHtml('product_additional_data') ?>

<?php } ?>
</div>
